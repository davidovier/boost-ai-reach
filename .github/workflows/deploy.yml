name: Deploy

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

permissions:
  contents: write

jobs:
  deploy-preview:
    if: ${{ github.event_name == 'pull_request' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
      - name: Install Vercel CLI
        run: npm i -g vercel@latest
      - name: Vercel Pull (preview)
        env:
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
        run: vercel pull --yes --environment=preview --token "$VERCEL_TOKEN"
      - name: Build (preview)
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
        run: vercel build --token "$VERCEL_TOKEN"
      - name: Deploy (preview)
        id: deploy
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
        run: |
          URL=$(vercel deploy --prebuilt --token "$VERCEL_TOKEN")
          echo "preview_url=$URL" >> $GITHUB_OUTPUT
      - name: Comment Preview URL
        if: ${{ github.event.pull_request.number }}
        uses: actions/github-script@v7
        with:
          script: |
            const url = process.env.PREVIEW_URL || '${{ steps.deploy.outputs.preview_url }}';
            github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              body: `Preview deployed: ${url}`
            });
        env:
          PREVIEW_URL: ${{ steps.deploy.outputs.preview_url }}

  deploy-production:
    if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}
    runs-on: ubuntu-latest
    needs: []
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
      - name: Install Vercel CLI
        run: npm i -g vercel@latest
      - name: Vercel Pull (production)
        env:
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
        run: vercel pull --yes --environment=production --token "$VERCEL_TOKEN"
      - name: Build (production)
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
        run: vercel build --prod --token "$VERCEL_TOKEN"
      - name: Deploy (production)
        id: deploy
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
        run: |
          URL=$(vercel deploy --prebuilt --prod --token "$VERCEL_TOKEN")
          echo "prod_url=$URL" >> $GITHUB_OUTPUT
      - name: Create tag v1.0.0 if missing
        run: |
          if git rev-parse -q --verify "refs/tags/v1.0.0" >/dev/null; then
            echo "Tag v1.0.0 already exists. Skipping."
          else
            git config user.name "github-actions"
            git config user.email "github-actions@github.com"
            git tag v1.0.0
            git push origin v1.0.0
          fi
      - name: Output deployment URL
        run: echo "Production deployed: ${{ steps.deploy.outputs.prod_url }}"
